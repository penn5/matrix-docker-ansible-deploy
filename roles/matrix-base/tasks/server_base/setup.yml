---

- include_tasks: "{{ role_path }}/tasks/server_base/setup_centos.yml"
  when: ansible_distribution == 'CentOS'

- include_tasks: "{{ role_path }}/tasks/server_base/setup_fedora.yml"
  when: ansible_distribution == 'Fedora'

- block:
  # ansible_lsb is only available if lsb-release is installed.
  - name: Ensure lsb-release installed
    apt:
      name:
        - lsb-release
      state: present
      update_cache: yes
    register: lsb_release_installation_result

  - name: Reread ansible_lsb facts if lsb-release got installed
    setup: filter=ansible_lsb*
    when: lsb_release_installation_result.changed

  - include_tasks: "{{ role_path }}/tasks/server_base/setup_debian.yml"
    when: (ansible_os_family == 'Debian') and (ansible_lsb.id != 'Raspbian')

  - include_tasks: "{{ role_path }}/tasks/server_base/setup_raspbian.yml"
    when: (ansible_os_family == 'Debian') and (ansible_lsb.id == 'Raspbian')
  when: ansible_os_family == 'Debian'

- include_tasks: "{{ role_path }}/tasks/server_base/setup_archlinux.yml"
  when: ansible_distribution == 'Archlinux'

- name: Ensure Docker.service is available
  template:
    src: "{{ role_path }}/templates/systemd/docker.service"
    dest: "{{ matrix_systemd_path }}/docker.service"
    mode: 0644
  register: matrix_docker_systemd_service_result

- name: Ensure systemd reloaded after docker.service installation
  service:
    daemon_reload: yes
  when: "matrix_docker_systemd_service_result.changed|bool"

- name: Ensure Docker is started and autoruns
  service:
    name: docker
    state: started
    enabled: yes

- name: "Ensure {{ matrix_ntpd_service }} is started and autoruns"
  service:
    name: "{{ matrix_ntpd_service }}"
    state: started
    enabled: yes

- name: Ensure matrix.target is installed
  template:
    src: "{{ role_path }}/templates/systemd/matrix.target"
    dest: "{{ matrix_systemd_path }}/matrix.target"
    mode: 0644
